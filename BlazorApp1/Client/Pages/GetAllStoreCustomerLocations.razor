@page "/GetAllStoreCustomerLocations"
@inject StoreCustomerLocationService StoreCustomerLocationService

<h3>Store Customer Locations</h3>

@if (storeCustomerLocations == null)
{
    <p><em>Loading...</em></p>
}
else if (storeCustomerLocations.Any())
{
    <table class="table">
        <thead>
            <tr>
                <th>ID</th>
                <th>Store ID</th>
                <th>Customer ID</th>
                <th>Number of Cartons</th>
                <th>Goods Delivery IDs</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var location in storeCustomerLocations)
            {
                <tr>
                    <td>@location.Id</td>
                    <td>@location.StoreId</td>
                    <td>@location.CustomerId</td>
                    <td>@location.NumberOfCartons</td>
                    <td>@string.Join(", ", location.GoodsDeliveryIds)</td>
                </tr>
            }
        </tbody>
    </table>
}
else
{
    <p>No store customer locations found.</p>
}

@code {
    private List<StoreCustomerLocation> storeCustomerLocations = new List<StoreCustomerLocation>();

    protected override async Task OnInitializedAsync()
    {
        try
        {
            storeCustomerLocations = await StoreCustomerLocationService.GetStoreCustomerLocationsAsync();
        }
        catch (HttpRequestException ex)
        {
            // Log the exception or display an error message
            // Example: Console.WriteLine($"HTTP Error: {ex.Message}");
        }
        catch (Exception ex)
        {
            // Handle unexpected errors
            // Example: Console.WriteLine($"Unexpected Error: {ex.Message}");
        }
    }
}
